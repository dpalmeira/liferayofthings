package com.lrexperts.liferay.liferayofthings.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import com.liferay.portlet.asset.service.persistence.AssetEntryPersistence;
import com.liferay.portlet.asset.service.persistence.AssetTagPersistence;

import com.lrexperts.liferay.liferayofthings.model.Thing;
import com.lrexperts.liferay.liferayofthings.service.ThingService;
import com.lrexperts.liferay.liferayofthings.service.persistence.ActuatorPersistence;
import com.lrexperts.liferay.liferayofthings.service.persistence.ActuatorTypePersistence;
import com.lrexperts.liferay.liferayofthings.service.persistence.SensorPersistence;
import com.lrexperts.liferay.liferayofthings.service.persistence.SensorTypePersistence;
import com.lrexperts.liferay.liferayofthings.service.persistence.SensorValuePersistence;
import com.lrexperts.liferay.liferayofthings.service.persistence.ThingGroupPersistence;
import com.lrexperts.liferay.liferayofthings.service.persistence.ThingPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the thing remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.lrexperts.liferay.liferayofthings.service.impl.ThingServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.lrexperts.liferay.liferayofthings.service.impl.ThingServiceImpl
 * @see com.lrexperts.liferay.liferayofthings.service.ThingServiceUtil
 * @generated
 */
public abstract class ThingServiceBaseImpl extends BaseServiceImpl
    implements ThingService, IdentifiableBean {
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.ActuatorLocalService.class)
    protected com.lrexperts.liferay.liferayofthings.service.ActuatorLocalService actuatorLocalService;
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.ActuatorService.class)
    protected com.lrexperts.liferay.liferayofthings.service.ActuatorService actuatorService;
    @BeanReference(type = ActuatorPersistence.class)
    protected ActuatorPersistence actuatorPersistence;
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.ActuatorTypeLocalService.class)
    protected com.lrexperts.liferay.liferayofthings.service.ActuatorTypeLocalService actuatorTypeLocalService;
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.ActuatorTypeService.class)
    protected com.lrexperts.liferay.liferayofthings.service.ActuatorTypeService actuatorTypeService;
    @BeanReference(type = ActuatorTypePersistence.class)
    protected ActuatorTypePersistence actuatorTypePersistence;
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.SensorLocalService.class)
    protected com.lrexperts.liferay.liferayofthings.service.SensorLocalService sensorLocalService;
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.SensorService.class)
    protected com.lrexperts.liferay.liferayofthings.service.SensorService sensorService;
    @BeanReference(type = SensorPersistence.class)
    protected SensorPersistence sensorPersistence;
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.SensorTypeLocalService.class)
    protected com.lrexperts.liferay.liferayofthings.service.SensorTypeLocalService sensorTypeLocalService;
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.SensorTypeService.class)
    protected com.lrexperts.liferay.liferayofthings.service.SensorTypeService sensorTypeService;
    @BeanReference(type = SensorTypePersistence.class)
    protected SensorTypePersistence sensorTypePersistence;
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.SensorValueLocalService.class)
    protected com.lrexperts.liferay.liferayofthings.service.SensorValueLocalService sensorValueLocalService;
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.SensorValueService.class)
    protected com.lrexperts.liferay.liferayofthings.service.SensorValueService sensorValueService;
    @BeanReference(type = SensorValuePersistence.class)
    protected SensorValuePersistence sensorValuePersistence;
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.ThingLocalService.class)
    protected com.lrexperts.liferay.liferayofthings.service.ThingLocalService thingLocalService;
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.ThingService.class)
    protected com.lrexperts.liferay.liferayofthings.service.ThingService thingService;
    @BeanReference(type = ThingPersistence.class)
    protected ThingPersistence thingPersistence;
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.ThingGroupLocalService.class)
    protected com.lrexperts.liferay.liferayofthings.service.ThingGroupLocalService thingGroupLocalService;
    @BeanReference(type = com.lrexperts.liferay.liferayofthings.service.ThingGroupService.class)
    protected com.lrexperts.liferay.liferayofthings.service.ThingGroupService thingGroupService;
    @BeanReference(type = ThingGroupPersistence.class)
    protected ThingGroupPersistence thingGroupPersistence;
    @BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
    protected com.liferay.counter.service.CounterLocalService counterLocalService;
    @BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
    protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
    @BeanReference(type = com.liferay.portal.service.UserLocalService.class)
    protected com.liferay.portal.service.UserLocalService userLocalService;
    @BeanReference(type = com.liferay.portal.service.UserService.class)
    protected com.liferay.portal.service.UserService userService;
    @BeanReference(type = UserPersistence.class)
    protected UserPersistence userPersistence;
    @BeanReference(type = com.liferay.portlet.asset.service.AssetEntryLocalService.class)
    protected com.liferay.portlet.asset.service.AssetEntryLocalService assetEntryLocalService;
    @BeanReference(type = com.liferay.portlet.asset.service.AssetEntryService.class)
    protected com.liferay.portlet.asset.service.AssetEntryService assetEntryService;
    @BeanReference(type = AssetEntryPersistence.class)
    protected AssetEntryPersistence assetEntryPersistence;
    @BeanReference(type = com.liferay.portlet.asset.service.AssetTagLocalService.class)
    protected com.liferay.portlet.asset.service.AssetTagLocalService assetTagLocalService;
    @BeanReference(type = com.liferay.portlet.asset.service.AssetTagService.class)
    protected com.liferay.portlet.asset.service.AssetTagService assetTagService;
    @BeanReference(type = AssetTagPersistence.class)
    protected AssetTagPersistence assetTagPersistence;
    private String _beanIdentifier;
    private ClassLoader _classLoader;
    private ThingServiceClpInvoker _clpInvoker = new ThingServiceClpInvoker();

    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. Always use {@link com.lrexperts.liferay.liferayofthings.service.ThingServiceUtil} to access the thing remote service.
     */

    /**
     * Returns the actuator local service.
     *
     * @return the actuator local service
     */
    public com.lrexperts.liferay.liferayofthings.service.ActuatorLocalService getActuatorLocalService() {
        return actuatorLocalService;
    }

    /**
     * Sets the actuator local service.
     *
     * @param actuatorLocalService the actuator local service
     */
    public void setActuatorLocalService(
        com.lrexperts.liferay.liferayofthings.service.ActuatorLocalService actuatorLocalService) {
        this.actuatorLocalService = actuatorLocalService;
    }

    /**
     * Returns the actuator remote service.
     *
     * @return the actuator remote service
     */
    public com.lrexperts.liferay.liferayofthings.service.ActuatorService getActuatorService() {
        return actuatorService;
    }

    /**
     * Sets the actuator remote service.
     *
     * @param actuatorService the actuator remote service
     */
    public void setActuatorService(
        com.lrexperts.liferay.liferayofthings.service.ActuatorService actuatorService) {
        this.actuatorService = actuatorService;
    }

    /**
     * Returns the actuator persistence.
     *
     * @return the actuator persistence
     */
    public ActuatorPersistence getActuatorPersistence() {
        return actuatorPersistence;
    }

    /**
     * Sets the actuator persistence.
     *
     * @param actuatorPersistence the actuator persistence
     */
    public void setActuatorPersistence(ActuatorPersistence actuatorPersistence) {
        this.actuatorPersistence = actuatorPersistence;
    }

    /**
     * Returns the actuator type local service.
     *
     * @return the actuator type local service
     */
    public com.lrexperts.liferay.liferayofthings.service.ActuatorTypeLocalService getActuatorTypeLocalService() {
        return actuatorTypeLocalService;
    }

    /**
     * Sets the actuator type local service.
     *
     * @param actuatorTypeLocalService the actuator type local service
     */
    public void setActuatorTypeLocalService(
        com.lrexperts.liferay.liferayofthings.service.ActuatorTypeLocalService actuatorTypeLocalService) {
        this.actuatorTypeLocalService = actuatorTypeLocalService;
    }

    /**
     * Returns the actuator type remote service.
     *
     * @return the actuator type remote service
     */
    public com.lrexperts.liferay.liferayofthings.service.ActuatorTypeService getActuatorTypeService() {
        return actuatorTypeService;
    }

    /**
     * Sets the actuator type remote service.
     *
     * @param actuatorTypeService the actuator type remote service
     */
    public void setActuatorTypeService(
        com.lrexperts.liferay.liferayofthings.service.ActuatorTypeService actuatorTypeService) {
        this.actuatorTypeService = actuatorTypeService;
    }

    /**
     * Returns the actuator type persistence.
     *
     * @return the actuator type persistence
     */
    public ActuatorTypePersistence getActuatorTypePersistence() {
        return actuatorTypePersistence;
    }

    /**
     * Sets the actuator type persistence.
     *
     * @param actuatorTypePersistence the actuator type persistence
     */
    public void setActuatorTypePersistence(
        ActuatorTypePersistence actuatorTypePersistence) {
        this.actuatorTypePersistence = actuatorTypePersistence;
    }

    /**
     * Returns the sensor local service.
     *
     * @return the sensor local service
     */
    public com.lrexperts.liferay.liferayofthings.service.SensorLocalService getSensorLocalService() {
        return sensorLocalService;
    }

    /**
     * Sets the sensor local service.
     *
     * @param sensorLocalService the sensor local service
     */
    public void setSensorLocalService(
        com.lrexperts.liferay.liferayofthings.service.SensorLocalService sensorLocalService) {
        this.sensorLocalService = sensorLocalService;
    }

    /**
     * Returns the sensor remote service.
     *
     * @return the sensor remote service
     */
    public com.lrexperts.liferay.liferayofthings.service.SensorService getSensorService() {
        return sensorService;
    }

    /**
     * Sets the sensor remote service.
     *
     * @param sensorService the sensor remote service
     */
    public void setSensorService(
        com.lrexperts.liferay.liferayofthings.service.SensorService sensorService) {
        this.sensorService = sensorService;
    }

    /**
     * Returns the sensor persistence.
     *
     * @return the sensor persistence
     */
    public SensorPersistence getSensorPersistence() {
        return sensorPersistence;
    }

    /**
     * Sets the sensor persistence.
     *
     * @param sensorPersistence the sensor persistence
     */
    public void setSensorPersistence(SensorPersistence sensorPersistence) {
        this.sensorPersistence = sensorPersistence;
    }

    /**
     * Returns the sensor type local service.
     *
     * @return the sensor type local service
     */
    public com.lrexperts.liferay.liferayofthings.service.SensorTypeLocalService getSensorTypeLocalService() {
        return sensorTypeLocalService;
    }

    /**
     * Sets the sensor type local service.
     *
     * @param sensorTypeLocalService the sensor type local service
     */
    public void setSensorTypeLocalService(
        com.lrexperts.liferay.liferayofthings.service.SensorTypeLocalService sensorTypeLocalService) {
        this.sensorTypeLocalService = sensorTypeLocalService;
    }

    /**
     * Returns the sensor type remote service.
     *
     * @return the sensor type remote service
     */
    public com.lrexperts.liferay.liferayofthings.service.SensorTypeService getSensorTypeService() {
        return sensorTypeService;
    }

    /**
     * Sets the sensor type remote service.
     *
     * @param sensorTypeService the sensor type remote service
     */
    public void setSensorTypeService(
        com.lrexperts.liferay.liferayofthings.service.SensorTypeService sensorTypeService) {
        this.sensorTypeService = sensorTypeService;
    }

    /**
     * Returns the sensor type persistence.
     *
     * @return the sensor type persistence
     */
    public SensorTypePersistence getSensorTypePersistence() {
        return sensorTypePersistence;
    }

    /**
     * Sets the sensor type persistence.
     *
     * @param sensorTypePersistence the sensor type persistence
     */
    public void setSensorTypePersistence(
        SensorTypePersistence sensorTypePersistence) {
        this.sensorTypePersistence = sensorTypePersistence;
    }

    /**
     * Returns the sensor value local service.
     *
     * @return the sensor value local service
     */
    public com.lrexperts.liferay.liferayofthings.service.SensorValueLocalService getSensorValueLocalService() {
        return sensorValueLocalService;
    }

    /**
     * Sets the sensor value local service.
     *
     * @param sensorValueLocalService the sensor value local service
     */
    public void setSensorValueLocalService(
        com.lrexperts.liferay.liferayofthings.service.SensorValueLocalService sensorValueLocalService) {
        this.sensorValueLocalService = sensorValueLocalService;
    }

    /**
     * Returns the sensor value remote service.
     *
     * @return the sensor value remote service
     */
    public com.lrexperts.liferay.liferayofthings.service.SensorValueService getSensorValueService() {
        return sensorValueService;
    }

    /**
     * Sets the sensor value remote service.
     *
     * @param sensorValueService the sensor value remote service
     */
    public void setSensorValueService(
        com.lrexperts.liferay.liferayofthings.service.SensorValueService sensorValueService) {
        this.sensorValueService = sensorValueService;
    }

    /**
     * Returns the sensor value persistence.
     *
     * @return the sensor value persistence
     */
    public SensorValuePersistence getSensorValuePersistence() {
        return sensorValuePersistence;
    }

    /**
     * Sets the sensor value persistence.
     *
     * @param sensorValuePersistence the sensor value persistence
     */
    public void setSensorValuePersistence(
        SensorValuePersistence sensorValuePersistence) {
        this.sensorValuePersistence = sensorValuePersistence;
    }

    /**
     * Returns the thing local service.
     *
     * @return the thing local service
     */
    public com.lrexperts.liferay.liferayofthings.service.ThingLocalService getThingLocalService() {
        return thingLocalService;
    }

    /**
     * Sets the thing local service.
     *
     * @param thingLocalService the thing local service
     */
    public void setThingLocalService(
        com.lrexperts.liferay.liferayofthings.service.ThingLocalService thingLocalService) {
        this.thingLocalService = thingLocalService;
    }

    /**
     * Returns the thing remote service.
     *
     * @return the thing remote service
     */
    public com.lrexperts.liferay.liferayofthings.service.ThingService getThingService() {
        return thingService;
    }

    /**
     * Sets the thing remote service.
     *
     * @param thingService the thing remote service
     */
    public void setThingService(
        com.lrexperts.liferay.liferayofthings.service.ThingService thingService) {
        this.thingService = thingService;
    }

    /**
     * Returns the thing persistence.
     *
     * @return the thing persistence
     */
    public ThingPersistence getThingPersistence() {
        return thingPersistence;
    }

    /**
     * Sets the thing persistence.
     *
     * @param thingPersistence the thing persistence
     */
    public void setThingPersistence(ThingPersistence thingPersistence) {
        this.thingPersistence = thingPersistence;
    }

    /**
     * Returns the thing group local service.
     *
     * @return the thing group local service
     */
    public com.lrexperts.liferay.liferayofthings.service.ThingGroupLocalService getThingGroupLocalService() {
        return thingGroupLocalService;
    }

    /**
     * Sets the thing group local service.
     *
     * @param thingGroupLocalService the thing group local service
     */
    public void setThingGroupLocalService(
        com.lrexperts.liferay.liferayofthings.service.ThingGroupLocalService thingGroupLocalService) {
        this.thingGroupLocalService = thingGroupLocalService;
    }

    /**
     * Returns the thing group remote service.
     *
     * @return the thing group remote service
     */
    public com.lrexperts.liferay.liferayofthings.service.ThingGroupService getThingGroupService() {
        return thingGroupService;
    }

    /**
     * Sets the thing group remote service.
     *
     * @param thingGroupService the thing group remote service
     */
    public void setThingGroupService(
        com.lrexperts.liferay.liferayofthings.service.ThingGroupService thingGroupService) {
        this.thingGroupService = thingGroupService;
    }

    /**
     * Returns the thing group persistence.
     *
     * @return the thing group persistence
     */
    public ThingGroupPersistence getThingGroupPersistence() {
        return thingGroupPersistence;
    }

    /**
     * Sets the thing group persistence.
     *
     * @param thingGroupPersistence the thing group persistence
     */
    public void setThingGroupPersistence(
        ThingGroupPersistence thingGroupPersistence) {
        this.thingGroupPersistence = thingGroupPersistence;
    }

    /**
     * Returns the counter local service.
     *
     * @return the counter local service
     */
    public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
        return counterLocalService;
    }

    /**
     * Sets the counter local service.
     *
     * @param counterLocalService the counter local service
     */
    public void setCounterLocalService(
        com.liferay.counter.service.CounterLocalService counterLocalService) {
        this.counterLocalService = counterLocalService;
    }

    /**
     * Returns the resource local service.
     *
     * @return the resource local service
     */
    public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
        return resourceLocalService;
    }

    /**
     * Sets the resource local service.
     *
     * @param resourceLocalService the resource local service
     */
    public void setResourceLocalService(
        com.liferay.portal.service.ResourceLocalService resourceLocalService) {
        this.resourceLocalService = resourceLocalService;
    }

    /**
     * Returns the user local service.
     *
     * @return the user local service
     */
    public com.liferay.portal.service.UserLocalService getUserLocalService() {
        return userLocalService;
    }

    /**
     * Sets the user local service.
     *
     * @param userLocalService the user local service
     */
    public void setUserLocalService(
        com.liferay.portal.service.UserLocalService userLocalService) {
        this.userLocalService = userLocalService;
    }

    /**
     * Returns the user remote service.
     *
     * @return the user remote service
     */
    public com.liferay.portal.service.UserService getUserService() {
        return userService;
    }

    /**
     * Sets the user remote service.
     *
     * @param userService the user remote service
     */
    public void setUserService(
        com.liferay.portal.service.UserService userService) {
        this.userService = userService;
    }

    /**
     * Returns the user persistence.
     *
     * @return the user persistence
     */
    public UserPersistence getUserPersistence() {
        return userPersistence;
    }

    /**
     * Sets the user persistence.
     *
     * @param userPersistence the user persistence
     */
    public void setUserPersistence(UserPersistence userPersistence) {
        this.userPersistence = userPersistence;
    }

    /**
     * Returns the asset entry local service.
     *
     * @return the asset entry local service
     */
    public com.liferay.portlet.asset.service.AssetEntryLocalService getAssetEntryLocalService() {
        return assetEntryLocalService;
    }

    /**
     * Sets the asset entry local service.
     *
     * @param assetEntryLocalService the asset entry local service
     */
    public void setAssetEntryLocalService(
        com.liferay.portlet.asset.service.AssetEntryLocalService assetEntryLocalService) {
        this.assetEntryLocalService = assetEntryLocalService;
    }

    /**
     * Returns the asset entry remote service.
     *
     * @return the asset entry remote service
     */
    public com.liferay.portlet.asset.service.AssetEntryService getAssetEntryService() {
        return assetEntryService;
    }

    /**
     * Sets the asset entry remote service.
     *
     * @param assetEntryService the asset entry remote service
     */
    public void setAssetEntryService(
        com.liferay.portlet.asset.service.AssetEntryService assetEntryService) {
        this.assetEntryService = assetEntryService;
    }

    /**
     * Returns the asset entry persistence.
     *
     * @return the asset entry persistence
     */
    public AssetEntryPersistence getAssetEntryPersistence() {
        return assetEntryPersistence;
    }

    /**
     * Sets the asset entry persistence.
     *
     * @param assetEntryPersistence the asset entry persistence
     */
    public void setAssetEntryPersistence(
        AssetEntryPersistence assetEntryPersistence) {
        this.assetEntryPersistence = assetEntryPersistence;
    }

    /**
     * Returns the asset tag local service.
     *
     * @return the asset tag local service
     */
    public com.liferay.portlet.asset.service.AssetTagLocalService getAssetTagLocalService() {
        return assetTagLocalService;
    }

    /**
     * Sets the asset tag local service.
     *
     * @param assetTagLocalService the asset tag local service
     */
    public void setAssetTagLocalService(
        com.liferay.portlet.asset.service.AssetTagLocalService assetTagLocalService) {
        this.assetTagLocalService = assetTagLocalService;
    }

    /**
     * Returns the asset tag remote service.
     *
     * @return the asset tag remote service
     */
    public com.liferay.portlet.asset.service.AssetTagService getAssetTagService() {
        return assetTagService;
    }

    /**
     * Sets the asset tag remote service.
     *
     * @param assetTagService the asset tag remote service
     */
    public void setAssetTagService(
        com.liferay.portlet.asset.service.AssetTagService assetTagService) {
        this.assetTagService = assetTagService;
    }

    /**
     * Returns the asset tag persistence.
     *
     * @return the asset tag persistence
     */
    public AssetTagPersistence getAssetTagPersistence() {
        return assetTagPersistence;
    }

    /**
     * Sets the asset tag persistence.
     *
     * @param assetTagPersistence the asset tag persistence
     */
    public void setAssetTagPersistence(AssetTagPersistence assetTagPersistence) {
        this.assetTagPersistence = assetTagPersistence;
    }

    public void afterPropertiesSet() {
        Class<?> clazz = getClass();

        _classLoader = clazz.getClassLoader();
    }

    public void destroy() {
    }

    /**
     * Returns the Spring bean ID for this bean.
     *
     * @return the Spring bean ID for this bean
     */
    @Override
    public String getBeanIdentifier() {
        return _beanIdentifier;
    }

    /**
     * Sets the Spring bean ID for this bean.
     *
     * @param beanIdentifier the Spring bean ID for this bean
     */
    @Override
    public void setBeanIdentifier(String beanIdentifier) {
        _beanIdentifier = beanIdentifier;
    }

    @Override
    public Object invokeMethod(String name, String[] parameterTypes,
        Object[] arguments) throws Throwable {
        Thread currentThread = Thread.currentThread();

        ClassLoader contextClassLoader = currentThread.getContextClassLoader();

        if (contextClassLoader != _classLoader) {
            currentThread.setContextClassLoader(_classLoader);
        }

        try {
            return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
        } finally {
            if (contextClassLoader != _classLoader) {
                currentThread.setContextClassLoader(contextClassLoader);
            }
        }
    }

    protected Class<?> getModelClass() {
        return Thing.class;
    }

    protected String getModelClassName() {
        return Thing.class.getName();
    }

    /**
     * Performs an SQL query.
     *
     * @param sql the sql query
     */
    protected void runSQL(String sql) throws SystemException {
        try {
            DataSource dataSource = thingPersistence.getDataSource();

            SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
                    sql, new int[0]);

            sqlUpdate.update();
        } catch (Exception e) {
            throw new SystemException(e);
        }
    }
}
